<?php

/**
  Generated by PHPistols
  The PHP code generator https://www.phpistols.com
 */
class Bill {

    var $conn;
    var $list;
    var $id;
    var $invoice_no;
    var $invoice_date;
    var $supplier;
    var $final_amount;

    /**
     * Constructor
     * @param $conn PDO db connection
     */
    public function __construct($conn) {
        $this->conn = $conn;
    }

    public function init($id, $invoice_no, $invoice_date, $supplier, $final_amount) {
        $this->id = $id;
        $this->invoice_no = $invoice_no;
        $this->invoice_date = $invoice_date;
        $this->supplier = $supplier;
        $this->final_amount = $final_amount;
    }

    /**
     * Add a row in bill.
     * @return int 0 or 1
     */
    function insert($billObj) {

        $query = "  INSERT INTO bill  ( invoice_no, invoice_date, supplier, final_amount)
                    VALUES (
                    :invoice_no,
                    :invoice_date,
                    :supplier,
                    :final_amount
                    )";

        $q = $this->conn->prepare($query);
        $q->execute(array(':invoice_no' => $billObj->invoice_no,
            ':invoice_date' => $billObj->invoice_date,
            ':supplier' => $billObj->supplier,
            ':final_amount' => $billObj->final_amount));
        if ($this->conn->lastInsertId() != 0) {
            return 1;
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Update a row in bill.
     * @return int 0 or 1
     */
    function update($billObj) {
        $query = "  UPDATE bill SET
                    `invoice_no` = :invoice_no,
                    `invoice_date` = :invoice_date,
                    `supplier` = :supplier,
                    `final_amount` = :final_amount
            WHERE id = :id ";

        $q = $this->conn->prepare($query);
        $q->execute(
                array(':invoice_no' => $billObj->invoice_no,
                    ':invoice_date' => $billObj->invoice_date,
                    ':supplier' => $billObj->supplier,
                    ':final_amount' => $billObj->final_amount,
                    ':id' => $billObj->id));
        if ($q->rowCount() == 1) {
            return (1);
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Delete a row in bill.
     * @param Int id_user
     * @return int 0 or 1
     */
    function del($id) {
        $query = "DELETE FROM bill WHERE id = :id";

        $q = $this->conn->prepare($query);
        $q->execute(array(':id' => $id));
        $st = $q->rowCount();
        if ($st == 1) {
            return (1);
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Get a row in bill.
     * @param Int id_user
     * @return int 0 or 1
     */
    function fetch($id) {

        $query = "  SELECT b.id, b.invoice_no, b.invoice_date, b.supplier, b.final_amount
                    FROM Bill AS b 
                    WHERE b.id = :id";

        $q = $this->conn->prepare($query);
        if ($q->execute(array(':id' => $id))) {
            $this->list = array();
            $i = 0;
            while ($row = $q->fetch(PDO::FETCH_ASSOC)) {
                $this->list[$i]['id'] = $row['id'];
                $this->list[$i]['invoice_no'] = $row['invoice_no'];
                $this->list[$i]['invoice_date'] = $row['invoice_date'];
                $this->list[$i]['supplier'] = $row['supplier'];
                $this->list[$i]['final_amount'] = $row['final_amount'];
                $i++;
            }
            return ($this->list);
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Get a list of row in bill.
     * @param Int limitFrom
     * @param Int limitNumber
     * @param char orderBy
     * @param Int order
     * @return int 0 or Number of elements
     */
    function fetchAll($limitFrom = 0, $limitNumber = 30, $orderBy = 'b.`id`', $order = 'ASC') {

        $query = "  SELECT b.`id`, b.`invoice_no`, b.`invoice_date`, b.`supplier`, b.`final_amount`
                    FROM bill AS b order by :orderBy :order limit :limitFrom, :limitNumber";

        if ($order != 'ASC') {
            $order = 'DESC';
        }

        $q = $this->conn->prepare($query);

        $q->bindValue(':orderBy', intval($orderBy), PDO::PARAM_STR);
        $q->bindValue(':order', intval($order), PDO::PARAM_STR);
        $q->bindValue(':limitFrom', intval($limitFrom), PDO::PARAM_INT);
        $q->bindValue(':limitNumber', intval($limitNumber), PDO::PARAM_INT);

        if ($q->execute()) {
            $this->list = array();
            $i = 0;
            while ($row = $q->fetch(PDO::FETCH_ASSOC)) {
                $this->list[$i]['id'] = $row['id'];
                $this->list[$i]['invoice_no'] = $row['invoice_no'];
                $this->list[$i]['invoice_date'] = $row['invoice_date'];
                $this->list[$i]['supplier'] = $row['supplier'];
                $this->list[$i]['final_amount'] = $row['final_amount'];
                $i++;
            }
            return ($this->list);
        } else {
            // var_dump($q->errorInfo());
            // $q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Count row in bill    * @return int 0 or Number of elements
     */
    function count() {

        $query = "SELECT COUNT(*) AS nbRows
        FROM bill";

        $q = $this->conn->prepare($query);

        if ($q->execute()) {
            if ($row = $q->fetch(PDO::FETCH_ASSOC)) {
                return($row['nbRows']);
            }
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

}

?>
    