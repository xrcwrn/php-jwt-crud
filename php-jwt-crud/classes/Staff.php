<?php

/**
  Generated by PHPistols
  The PHP code generator https://www.phpistols.com
 */
class Staff {

    var $conn;
    var $list;
    var $id;
    var $name;
    var $userid;
    var $mpass;
    var $dept;
    var $designation;
    var $mobilNo;

    /**
     * Constructor
     * @param $conn PDO db connection
     */
    public function __construct($conn) {
        $this->conn = $conn;
    }

    public function init($id, $name, $userid, $dept, $designation, $mobileNo) {
        $this->id = $id;
        $this->name = $name;
        $this->userid = $userid;
        $this->dept = $dept;
        $this->designation = $designation;
        $this->mobileNo = $mobileNo;
    }

    /**
     * Add a row in staff.
     * @return int 0 or 1
     */
    function insert($staffObj) {

        $query = "  INSERT INTO staff  ( name, userid, dept, designation, mobile_no)
                    VALUES (
                    :name,
                    :userid,
                    :dept,
                    :designation,
                    :mobileNo
                    )";

        $q = $this->conn->prepare($query);
        $q->execute(array(':name' => $staffObj->name,
            ':userid' => $staffObj->userid,
            ':dept' => $staffObj->dept,
            ':designation' => $staffObj->designation,
            ':mobileNo' => $staffObj->mobileNo));
        if ($this->conn->lastInsertId() != 0) {
            return 1;
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Update a row in staff.
     * @return int 0 or 1
     */
    function update($staffObj) {
        $query = "  UPDATE staff SET
                    name = :name,
                    userid = :userid,
                    dept = :dept,
                    designation = :designation,
                    mobile_no= :mobile_no
            WHERE id = :id ";

        $q = $this->conn->prepare($query);
        $q->execute(
                array(':name' => $staffObj->name,
                    ':userid' => $staffObj->userid,
                    ':dept' => $staffObj->dept,
                    ':designation' => $staffObj->designation,
                    ':mobile_no' => $staffObj->mobileNo,
                    ':id' => $staffObj->id));
        if ($q->rowCount() == 1) {
            return (1);
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Delete a row in staff.
     * @param Int id_user
     * @return int 0 or 1
     */
    function del($id) {
        $query = "DELETE FROM staff WHERE id = :id";

        $q = $this->conn->prepare($query);
        $q->execute(array(':id' => $id));
        $st = $q->rowCount();
        if ($st == 1) {
            return (1);
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Get a row in staff.
     * @param Int id_user
     * @return int 0 or 1
     */
    function fetch($id) {

        $query = "  SELECT id, name, userid, dept, designation, mobile_no
                    FROM Staff  
                    WHERE id = :id";

        $q = $this->conn->prepare($query);
        if ($q->execute(array(':id' => $id))) {
            $this->list = array();
            $i = 0;
            while ($row = $q->fetch(PDO::FETCH_ASSOC)) {
                $this->list[$i]['id'] = $row['id'];
                $this->list[$i]['name'] = $row['name'];
                $this->list[$i]['userid'] = $row['userid'];
                $this->list[$i]['dept'] = $row['dept'];
                $this->list[$i]['designation'] = $row['designation'];
                $this->list[$i]['mobile_no'] = $row['mobile_no'];
                $i++;
            }
            return ($this->list);
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Get a list of row in staff.
     * @param Int limitFrom
     * @param Int limitNumber
     * @param char orderBy
     * @param Int order
     * @return int 0 or Number of elements
     */
    function fetchAll($limitFrom = 0, $limitNumber = 30, $orderBy = 'b.`id`', $order = 'ASC') {

        $query = "SELECT id, name, userid, dept, designation, mobile_no 
                    FROM staff  order by :orderBy :order limit :limitFrom, :limitNumber";

        if ($order != 'ASC') {
            $order = 'DESC';
        }

        $q = $this->conn->prepare($query);

        $q->bindValue(':orderBy', intval($orderBy), PDO::PARAM_STR);
        $q->bindValue(':order', intval($order), PDO::PARAM_STR);
        $q->bindValue(':limitFrom', intval($limitFrom), PDO::PARAM_INT);
        $q->bindValue(':limitNumber', intval($limitNumber), PDO::PARAM_INT);

        if ($q->execute()) {
            $this->list = array();
            $i = 0;
            while ($row = $q->fetch(PDO::FETCH_ASSOC)) {
                $this->list[$i]['id'] = $row['id'];
                $this->list[$i]['name'] = $row['name'];
                $this->list[$i]['userid'] = $row['userid'];
                $this->list[$i]['dept'] = $row['dept'];
                $this->list[$i]['designation'] = $row['designation'];
                $this->list[$i]['mobile_no'] = $row['mobile_no'];
                $i++;
            }
            return ($this->list);
        } else {
            // var_dump($q->errorInfo());
            // $q->debugDumpParams();
            return(0);
        }
    }

    /**
     * Count row in staff    * @return int 0 or Number of elements
     */
    function count() {

        $query = "SELECT COUNT(*) AS nbRows
        FROM staff";

        $q = $this->conn->prepare($query);

        if ($q->execute()) {
            if ($row = $q->fetch(PDO::FETCH_ASSOC)) {
                return($row['nbRows']);
            }
        } else {
            //var_dump($q->errorInfo());
            //$q->debugDumpParams();
            return(0);
        }
    }

}

?>
    